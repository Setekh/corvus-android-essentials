apply plugin: 'com.android.library'

apply plugin: 'maven-publish'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    // Android Support Libs
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile 'com.android.support:design:25.3.0'
    compile "com.android.support:recyclerview-v7:25.3.0"
    compile "com.android.support:cardview-v7:25.3.0"
    // -- Android Support Libs

    // Square
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp3:okhttp:3.7.0'

    compile 'com.jakewharton.timber:timber:4.5.1'
    compile 'com.google.code.gson:gson:2.8.0'

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'org.jetbrains.anko:anko-sdk15:0.9.1' // sdk19, sdk21, sdk23 are also available
}

publish.dependsOn 'assembleRelease'
publishToMavenLocal.dependsOn 'assembleRelease'

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'eu.corvus.essentials'
            artifactId 'corvus-essentials'
            version '0.2.0'

            artifact getReleaseArtifact()

            artifact sourcesJar {
                classifier "sources"
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    if(it.group.contains("com.android.support"))
                        return

                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                println "Publishing with user ${System.getenv('bintray_user')}"
                username = System.getenv('bintray_user')
                password = System.getenv('bintray_key')
            }
            url "https://api.bintray.com/maven/whitesoftwaresrl/android/android_essentials/;publish=1"
        }
    }
}


def getReleaseArtifact() {
    return "build/outputs/aar/${project.name}-release.aar"
}

buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
